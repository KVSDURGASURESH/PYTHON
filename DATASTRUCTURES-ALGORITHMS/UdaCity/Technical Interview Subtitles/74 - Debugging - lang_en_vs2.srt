1
00:00:02,400 --> 00:00:05,800
Okay, so I'm looking here to
see if I have any errors.

2
00:00:06,536 --> 00:00:10,212
It looks like I forgot braces here for
dequeue.

3
00:00:10,212 --> 00:00:12,520
So I'm calling that
method correctly now.

4
00:00:12,520 --> 00:00:13,850
So now I'm just going to go ahead and

5
00:00:13,850 --> 00:00:15,854
go through my test cases
that I mentioned before.

6
00:00:15,854 --> 00:00:20,222
I'm just going to put them
in this little box here and

7
00:00:20,222 --> 00:00:23,730
we had our None, our empty brackets.

8
00:00:23,730 --> 00:00:27,167
So we go through these,
zero returns zero immediately, so

9
00:00:27,167 --> 00:00:31,582
that's working, and what about when
we actually have a working test case?

10
00:00:31,582 --> 00:00:33,858
That goes through most
of this code here.

11
00:00:33,858 --> 00:00:39,160
[BLANK_AUDIO]

12
00:00:39,160 --> 00:00:43,653
Okay, so I go through,
so that one's a 0.

13
00:00:43,653 --> 00:00:45,891
Checking the length.

14
00:00:45,891 --> 00:00:51,216
So, this would be set to 3.

15
00:00:51,216 --> 00:00:53,179
And this would be 2.

16
00:00:53,179 --> 00:00:56,711
So, going through every element.

17
00:00:56,711 --> 00:01:00,870
So, I find my first one.

18
00:01:00,870 --> 00:01:06,423
I'm incrementing my island count, so
now that's going to be equal to one.

19
00:01:06,424 --> 00:01:12,209
And I got my FindPartsOfIsland method
here, creating my q, appending those

20
00:01:12,209 --> 00:01:17,905
values and then I have my breadth first
search here that I'm going through.

21
00:01:17,905 --> 00:01:23,491
And so for this instance, there is no
one to the right or on the bottom of it,

22
00:01:23,491 --> 00:01:27,678
so I won't have to do this,
and then I go to the next one.

23
00:01:27,678 --> 00:01:32,300
Sent zero, so we don't do anything,
we just go through the loop.

24
00:01:32,300 --> 00:01:33,387
One, okay, so

25
00:01:33,387 --> 00:01:38,254
I'm going to increment my island
count again it's now going to be two.

26
00:01:38,254 --> 00:01:42,794
So then I go through that and
then I find my parts of island,

27
00:01:42,794 --> 00:01:45,575
so there actually are ones here, so

28
00:01:45,575 --> 00:01:50,135
I'm going to go ahead and
add those, then I add those there.

29
00:01:50,135 --> 00:01:53,293
And that looks all good,
and so this one,

30
00:01:53,293 --> 00:01:56,190
this one actually get set to 2 there.

31
00:01:56,190 --> 00:01:57,720
And this is going to get set to 2 and

32
00:01:57,720 --> 00:02:01,340
now I'm adding both of these
to the queue to look at them.

33
00:02:01,340 --> 00:02:03,672
And we're not appending
any this up front,

34
00:02:03,672 --> 00:02:06,490
I'm only appending that to the queue.

35
00:02:06,490 --> 00:02:09,835
So I'm looking through there,
there's nothing else and so

36
00:02:09,836 --> 00:02:13,381
basically it's going to be setting
these to 2, and that's, and

37
00:02:13,381 --> 00:02:17,100
then I'd probably just visit
every element in the array.

38
00:02:17,100 --> 00:02:20,970
There's no more ones, so
that would be end of it.

39
00:02:20,970 --> 00:02:26,587
But it looks like I forgot to
return the number of islands here.

40
00:02:26,587 --> 00:02:33,266
[BLANK_AUDIO]

41
00:02:33,266 --> 00:02:34,170
So it looks like it works.

42
00:02:34,170 --> 00:02:37,900
[BLANK_AUDIO]

43
00:02:37,910 --> 00:02:39,140
Well it looks like all
of his code worked.

44
00:02:39,140 --> 00:02:41,858
Not only is this fellow handsome but
he sure is intelligent.

45
00:02:42,980 --> 00:02:45,619
&gt;&gt; The debugging process
is often overlooked but

46
00:02:45,620 --> 00:02:48,760
a very important part of
the algorithm interview.

47
00:02:48,760 --> 00:02:52,480
Not only does this show the interviewer
that the candidate checks their code,

48
00:02:52,480 --> 00:02:55,820
it may even help the candidate find
mistakes that they missed the first

49
00:02:55,820 --> 00:02:57,310
time they were coding their solution.

50
00:02:58,590 --> 00:03:02,610
It's easy to miss a semicolon here and
there if a candidate were coding in some

51
00:03:02,610 --> 00:03:05,610
language like Java, or
forget to return a result.

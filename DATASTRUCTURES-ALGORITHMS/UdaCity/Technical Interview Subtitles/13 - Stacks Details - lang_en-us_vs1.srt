1
00:00:00,330 --> 00:00:04,290
Stacks can be really useful when you
only care about the most recent elements

2
00:00:04,290 --> 00:00:07,930
or the order in which you see and
save elements actually matters.

3
00:00:07,930 --> 00:00:10,200
Maybe you have a page like a news feed.

4
00:00:10,200 --> 00:00:13,350
You'll need to access the more
recent elements more quickly and

5
00:00:13,350 --> 00:00:14,719
more frequently, but

6
00:00:14,720 --> 00:00:17,970
you may need to show all of the elements
when the user scrolls down.

7
00:00:19,000 --> 00:00:22,620
There is some specific terminology
associated with stacks.

8
00:00:22,620 --> 00:00:24,150
When you add an element to a stack,

9
00:00:24,150 --> 00:00:27,590
the operation is called
push instead of insert.

10
00:00:27,590 --> 00:00:29,710
When you take an element
off of the stack,

11
00:00:29,710 --> 00:00:33,280
the operation is called
a pop instead of remove.

12
00:00:33,280 --> 00:00:36,940
Remember all you need here is to look
at the top element of the stack.

13
00:00:36,940 --> 00:00:40,830
So the operation should be
constant time for both operations.

14
00:00:40,830 --> 00:00:45,920
Now here's a possibly confusing point
because a stack is pretty abstract,

15
00:00:45,920 --> 00:00:48,960
it could actually be implemented
with another data type.

16
00:00:48,960 --> 00:00:52,149
What each element looks like and
how thereâ€™s connected aren't

17
00:00:52,149 --> 00:00:56,640
actually specified, just the methods for
adding and removing elements.

18
00:00:56,640 --> 00:01:00,150
For example you could use a link
list to implement a stack.

19
00:01:00,150 --> 00:01:03,800
You would keep track of the front
of a single link list and

20
00:01:03,800 --> 00:01:07,390
just keep adding elements
on top as you went.

21
00:01:07,400 --> 00:01:10,720
I also want to note that you
might see the notation L.I.F.O.

22
00:01:10,720 --> 00:01:12,570
associated with stacks.

23
00:01:12,570 --> 00:01:16,259
This acronym means Last In, First Out.

24
00:01:16,260 --> 00:01:20,560
All it's saying is the last element you
put on the stack when you use push,

25
00:01:20,560 --> 00:01:23,690
is always the first one you
get out when you use pop.

26
00:01:23,690 --> 00:01:26,500
It's just a fancy way of saying
something you hopefully already know

27
00:01:26,500 --> 00:01:27,270
about Stacks.

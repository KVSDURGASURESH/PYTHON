1
00:00:00,710 --> 00:00:02,500
我们来讨论下更合适的方法

2
00:00:03,600 --> 00:00:07,345
我们的第一个目标没必要是尽量提高

3
00:00:07,345 --> 00:00:09,422
最大重要的价值

4
00:00:09,422 --> 00:00:13,905
如果尽量提高最小重量的价值

5
00:00:13,905 --> 00:00:17,823
然后不断将它们相加 直到达到最大重量会怎样呢

6
00:00:17,823 --> 00:00:20,120
我们来看一个示例

7
00:00:20,120 --> 00:00:24,260
先创建一个数组 用来存储每个添加进来的重量值已满足重量限制

8
00:00:24,260 --> 00:00:27,100
对应的最大可能价值

9
00:00:28,150 --> 00:00:31,470
假设重量是正整数

10
00:00:31,470 --> 00:00:34,890
所以数组中的的索引代表的就是这些重量

11
00:00:35,180 --> 00:00:37,600
现在所有内容初始化为零

12
00:00:38,200 --> 00:00:41,960
这些是要装入背包中的物品

13
00:00:41,960 --> 00:00:42,600
重量限制为 6

14
00:00:43,690 --> 00:00:45,790
我们拿出重量为 2 的物品

15
00:00:46,990 --> 00:00:50,810
我们可以将索引 2 处的值更新为该物品的价值

16
00:00:52,230 --> 00:00:55,180
然后将其后的所有元素也更新为同一值

17
00:00:56,350 --> 00:01:00,390
即使我们的背包可以承载的重量为 6 我们到目前为止也只看到了一个物品

18
00:01:00,390 --> 00:01:04,550
所以我们需要基于一个物品得出该最佳价值

19
00:01:05,680 --> 00:01:07,660
然后看看下个物品

20
00:01:07,660 --> 00:01:10,585
我们无法更改索引 5 前面的任何元素

21
00:01:10,585 --> 00:01:14,934
该物品的价值比最大值要大

22
00:01:14,935 --> 00:01:17,150
并且占去了整个重量

23
00:01:17,150 --> 00:01:19,995
所以将最大值替换为 5 和 6

24
00:01:19,995 --> 00:01:26,750
对于最后一个物品 我们首先能够更改的是索引 4

25
00:01:26,750 --> 00:01:29,235
该值比这个值大 所以不动

26
00:01:30,510 --> 00:01:35,890
我们看看索引 5 然后将其与我们的值加上索引 5 的值进行对比

27
00:01:35,890 --> 00:01:40,288
因为原先的值更大 所以不动

28
00:01:40,288 --> 00:01:45,540
对于索引 6 我们将物品价值添加到索引 2 处的值

29
00:01:45,550 --> 00:01:50,480
结果值更大 所以替换掉它

30
00:01:50,480 --> 00:01:52,620
问题就解决了

31
00:01:52,620 --> 00:01:56,700
对于规模这么小的示例 似乎没啥必要

32
00:01:56,700 --> 00:01:59,910
但是想想如果有无数个物品 我们会节省多少时间

33
00:01:59,910 --> 00:02:02,500
这里 我们利用表格来存储

34
00:02:02,500 --> 00:02:04,360
预先计算的最大值

35
00:02:05,430 --> 00:02:08,449
我们只需要执行一次就能获得这些数字

36
00:02:09,600 --> 00:02:14,220
我们查看下每个物品 看看能否增加每个可能重量组合的最大价值

37
00:02:14,220 --> 00:02:16,880
直到达到最大重量限制

38
00:02:18,130 --> 00:02:22,650
因此 运行时间是 O(nw)

39
00:02:22,650 --> 00:02:25,919
w 是指背包的重量限制 n 是指元素数量

40
00:02:27,140 --> 00:02:30,640
我们可以采用一个伪多项式时间解决方案

41
00:02:30,640 --> 00:02:34,459
真正的伪多项式运行时间不会具有除了 n 之外的变量

42
00:02:35,870 --> 00:02:40,120
再次强调下 对于大型数据来说 多项式时间算法

43
00:02:40,120 --> 00:02:43,140
比指数时间算法要快多了

44
00:02:43,140 --> 00:02:45,339
所以这里的解决方案通常都更快

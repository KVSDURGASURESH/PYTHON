1
00:00:00,660 --> 00:00:03,270
由于在具体的实施中 所需的步骤数量变化很大

2
00:00:03,270 --> 00:00:07,369
当我们用大 O 符号表示效率时

3
00:00:07,370 --> 00:00:10,100
我们通常指的是近似值

4
00:00:11,200 --> 00:00:14,400
由于我们之前写的伪代码的效率

5
00:00:14,400 --> 00:00:17,310
可能结果会是这几个值 甚至还可能是其他情况

6
00:00:17,310 --> 00:00:23,159
我们可以说效率实际上就是 O(n)

7
00:00:23,160 --> 00:00:26,650
如果你是为生产而编写代码

8
00:00:26,650 --> 00:00:29,549
那么一定要注意计算次数 并尽量减少计算次数

9
00:00:29,550 --> 00:00:33,200
但是 在面试的时候 面试官不会关心你是不是真的能做到

10
00:00:33,200 --> 00:00:37,270
只是想知道你考虑到了效率

11
00:00:37,270 --> 00:00:38,680
并且能够在需要的时候计算效率

12
00:00:39,900 --> 00:00:42,700
近似值实际上是指

13
00:00:43,120 --> 00:00:48,100
必须针对输入中的每个字母执行一定的计算次数

14
00:00:49,180 --> 00:00:52,840
在使用大 O 符号时 你还需要考虑更多事项

15
00:00:53,890 --> 00:00:57,880
如果你还记得的话 我之前说过 我们需要至少检查 26 次

16
00:00:57,880 --> 00:01:00,670
才能浏览字母表中的所有字母

17
00:01:00,670 --> 00:01:04,190
在实际操作中 你不可能每次都浏览

18
00:01:04,190 --> 00:01:06,160
所有 26 个字母

19
00:01:06,160 --> 00:01:09,570
当我们谈到效率的时候 我们通常谈论的是最坏的情况

20
00:01:09,570 --> 00:01:15,210
也就是每次都要查看所有 26 个字母

21
00:01:15,210 --> 00:01:19,580
我们要重点考虑最坏情况 是因为这样可以计算出

22
00:01:19,580 --> 00:01:21,280
代码的运行时间上限

23
00:01:21,280 --> 00:01:25,160
你也可以从平均情况或最佳情况的角度

24
00:01:25,160 --> 00:01:26,869
计算效率

25
00:01:26,870 --> 00:01:29,650
所以如果涉及的是字母表中的字母

26
00:01:29,650 --> 00:01:34,110
最坏情况是我们必须浏览所有 26 个字母

27
00:01:34,110 --> 00:01:37,540
而最佳情况是 我们第一次尝试

28
00:01:37,540 --> 00:01:40,550
就找到所需的字母

29
00:01:40,550 --> 00:01:43,570
而平均情况是取个中位数 大概为 13 次

30
00:01:43,570 --> 00:01:45,889
在理想情况下

31
00:01:45,890 --> 00:01:50,317
循环访问一组字母平均需要访问 13 次

32
00:01:50,317 --> 00:01:53,919
有时候会更多 有时候会更少

33
00:01:53,920 --> 00:01:56,900
但是说大约需要 13 次肯定没错

34
00:01:56,900 --> 00:02:00,400
如果我们要尝试计算平均效率

35
00:02:00,400 --> 00:02:04,825
差不多是这个结果 最终是 16n+2

36
00:02:04,825 --> 00:02:08,930
现在我们再来讨论下近似值

37
00:02:09,960 --> 00:02:13,220
如果我们同时考虑平均情况、最坏情况

38
00:02:13,220 --> 00:02:18,370
和最佳情况 得出的结果会是 O(n)

39
00:02:18,370 --> 00:02:22,460
在面试中 你可能喜欢将平均情况

40
00:02:22,460 --> 00:02:27,200
最坏情况和最佳情况相结合 得出这一结果

41
00:02:27,200 --> 00:02:29,820
但是 最佳情况、最坏情况

42
00:02:29,820 --> 00:02:33,380
和平均情况并不会始终得出这一结果

43
00:02:33,380 --> 00:02:35,947
所以你一定要向面试官讲明

44
00:02:35,947 --> 00:02:37,350
你考虑的是哪种情况

45
00:02:38,185 --> 00:02:40,415
我们一直在介绍时间效率

46
00:02:40,415 --> 00:02:44,345
其实你也可以使用同一符号来表示空间效率

47
00:02:45,385 --> 00:02:49,200
例如 假设由于某种原因 你需要复制代码中的

48
00:02:49,200 --> 00:02:51,820
输入字符串三次

49
00:02:51,820 --> 00:02:55,350
那么 空间效率应该是这个结果

50
00:02:55,350 --> 00:02:58,930
面试中 面试官很少会问到空间效率方面的问题

51
00:02:58,930 --> 00:03:01,860
但是你也要考虑空间效率

52
00:03:01,860 --> 00:03:02,580
因为我们时不时地会遇到这一概念

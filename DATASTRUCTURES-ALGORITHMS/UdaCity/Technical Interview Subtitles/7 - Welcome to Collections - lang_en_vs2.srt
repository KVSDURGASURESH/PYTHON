1
00:00:00,290 --> 00:00:02,530
Now we're going to
talk about collections.

2
00:00:02,530 --> 00:00:05,560
There's almost no need for
a formal definition here,

3
00:00:05,560 --> 00:00:10,730
since a collection is, as the name
implies, just a group of things.

4
00:00:10,730 --> 00:00:16,790
You could have a collection of books,
a collection of Udacity employees, or

5
00:00:16,790 --> 00:00:20,290
even a collection of desk animal
things that I talk to when I'm

6
00:00:20,290 --> 00:00:22,729
stuck on programming projects and
the coaches aren't around.

7
00:00:23,980 --> 00:00:26,120
Let's make a few observations here.

8
00:00:26,120 --> 00:00:28,720
Collections don't have
a particular order.

9
00:00:28,720 --> 00:00:32,240
You could shuffle some elements around
and it wouldn't make a huge difference.

10
00:00:33,350 --> 00:00:38,500
Similarly, we couldn't say, give me
the third element in this collection,

11
00:00:38,500 --> 00:00:39,489
since there's no inherent order.

12
00:00:40,690 --> 00:00:43,559
Collections also don't need to
have the same type of object.

13
00:00:44,580 --> 00:00:49,390
Everything in the room could be in the,
around the dusty office collection,

14
00:00:49,390 --> 00:00:54,150
even though there are books and
people and animal things.

15
00:00:54,150 --> 00:00:56,680
A collection on its own really
isn't something you can use in

16
00:00:56,680 --> 00:00:57,589
a programming language.

17
00:00:58,740 --> 00:01:03,530
However, there are many data structures
that are extensions of collections.

18
00:01:03,530 --> 00:01:08,430
So, they just add more rules to the ones
that already apply for collections.

19
00:01:08,430 --> 00:01:09,810
Let's take a look at some of those now

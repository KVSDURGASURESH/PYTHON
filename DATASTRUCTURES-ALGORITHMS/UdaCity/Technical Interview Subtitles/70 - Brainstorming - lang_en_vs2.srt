1
00:00:00,190 --> 00:00:00,960
Okay.

2
00:00:00,960 --> 00:00:04,750
So what I'm thinking here
looking our possible inputs.

3
00:00:04,750 --> 00:00:08,200
If we were to take none or
an empty matrix as an input.

4
00:00:08,200 --> 00:00:10,490
We would return zero.

5
00:00:10,500 --> 00:00:14,280
Because for sure there would
be no islands in this case.

6
00:00:14,280 --> 00:00:16,990
But we could also have this as an input.

7
00:00:16,990 --> 00:00:20,639
So what I'm thinking here,
is we start at the first element.

8
00:00:20,640 --> 00:00:21,670
That's a one.

9
00:00:21,670 --> 00:00:24,120
So, I'll probably want some sort
of island counter variable and

10
00:00:24,120 --> 00:00:26,960
I'll initialize that there and
increment it by one.

11
00:00:26,960 --> 00:00:28,590
And then I get to the zero.

12
00:00:28,590 --> 00:00:30,875
And that's not part of any islands.

13
00:00:30,875 --> 00:00:32,270
So, I don't need to
do anything there and

14
00:00:32,270 --> 00:00:33,990
I get to this next element right here.

15
00:00:36,180 --> 00:00:39,600
So, that's actually part
of the same island.

16
00:00:39,600 --> 00:00:44,180
So I need to keep track of what
ones are part of the same island.

17
00:00:47,200 --> 00:00:51,100
Maybe what I could do is I could
look at the elements on top, and

18
00:00:51,100 --> 00:00:55,300
on bottom, and then check if
they're part of the same island.

19
00:00:55,300 --> 00:00:57,446
And then keep track of it somehow.

20
00:00:57,446 --> 00:01:02,400
Yeah that sthird approach but if you're
looking at that first element for

21
00:01:02,400 --> 00:01:06,350
example there is another one below
it but there's nothing above it.

22
00:01:06,350 --> 00:01:08,000
So what would you do in that case??

23
00:01:08,000 --> 00:01:11,800
&gt;&gt; All right because since there
is not a one above that we'd

24
00:01:11,800 --> 00:01:12,929
probably get some sort of runtime error.

25
00:01:12,930 --> 00:01:15,670
So first I would want to make sure
to check that there's actually

26
00:01:15,670 --> 00:01:19,737
an element there before I
check if it's a one or a zero.

27
00:01:22,570 --> 00:01:24,625
So I'm going to need to
keep track of this somehow.

28
00:01:24,625 --> 00:01:27,670
Maybe this is some
sort of data structure.

29
00:01:27,670 --> 00:01:30,110
&gt;&gt; Yeah, does this approach or
the problem or

30
00:01:30,110 --> 00:01:32,940
anything you've been walking through
your remind you of anything?

31
00:01:32,940 --> 00:01:36,900
&gt;&gt; Yeah, since this matrix can sort
of be like represented as a graph.

32
00:01:36,900 --> 00:01:38,900
This might be a breath
first search problem.

33
00:01:38,900 --> 00:01:41,240
So what I could do is when
I find the first one,

34
00:01:41,240 --> 00:01:45,160
I can look at the elements around it and
I can add those elements to Q.

35
00:01:45,160 --> 00:01:49,390
Check if those are ones and then if
they're are ones I could set them to

36
00:01:49,400 --> 00:01:51,700
another number so
they're marked as visited.

37
00:01:51,700 --> 00:01:53,169
And then I could keep going.

38
00:01:53,170 --> 00:01:54,250
&gt;&gt; Yeah that sounds really great.

39
00:01:56,140 --> 00:01:59,370
&gt;&gt; So it looks like his test cases
came in handy when brainstorming

40
00:01:59,370 --> 00:02:00,370
his solution.

41
00:02:00,370 --> 00:02:01,200
&gt;&gt; Sure did.

42
00:02:02,650 --> 00:02:07,360
&gt;&gt; He was able to use test cases to inch
his way towards developing a solution.

43
00:02:07,360 --> 00:02:10,340
Something else I noticed was that
he had great communication with

44
00:02:10,340 --> 00:02:11,670
the interviewer.

45
00:02:11,670 --> 00:02:14,859
He took the interviewer's cues to guide
him towards the correct solution.

46
00:02:15,950 --> 00:02:19,369
&gt;&gt; Yeah a big misconception that future
interviewees can have is they think that

47
00:02:19,370 --> 00:02:21,900
their interviewer isn't on their side.

48
00:02:21,900 --> 00:02:24,390
But really the interviewer
is there to help you and

49
00:02:24,390 --> 00:02:28,799
being able to take in their feedback
demonstrates your teamwork skills.

50
00:02:28,800 --> 00:02:31,420
Not to mention it helps
you solve the problem.

51
00:02:31,420 --> 00:02:34,109
Sometimes in an interviewee might get so
nervous that he or

52
00:02:34,110 --> 00:02:37,720
she just completely ignores
the interviewer's suggestions.

53
00:02:37,720 --> 00:02:40,370
This can be a big turn off for
the interviewers.

54
00:02:40,370 --> 00:02:44,170
So what if the interviewee was still
stuck after looking at his test cases

55
00:02:44,170 --> 00:02:45,140
and edge cases?

56
00:02:45,140 --> 00:02:49,490
&gt;&gt; Well, one thing the interviewee
mentioned was that this problem reminded

57
00:02:49,500 --> 00:02:51,510
him of the breath for
a search algorithm.

58
00:02:51,510 --> 00:02:54,739
Often if an interviewees is stuck
on a certain portion of the problem

59
00:02:54,740 --> 00:02:58,210
they can begin to brainstorm
algorithms and data structures.

60
00:02:58,210 --> 00:03:02,240
The interviewee may have noticed that a
graph can be represented as a matrix and

61
00:03:02,240 --> 00:03:04,690
that a breath first search
algorithm would fit here.

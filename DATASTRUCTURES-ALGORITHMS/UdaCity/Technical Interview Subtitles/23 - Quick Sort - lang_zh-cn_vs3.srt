1
00:00:00,490 --> 00:00:05,740
在很多情况下 快速排序是效率最高的排序算法之一

2
00:00:05,740 --> 00:00:08,830
要进行快速排序 主要是从数组中

3
00:00:08,830 --> 00:00:10,390
随机选择一个值

4
00:00:10,390 --> 00:00:16,129
将所有大于它的值移到它的上方 小于它的所有值移到它的下方

5
00:00:16,129 --> 00:00:18,230
最初所选的这个值叫做基准

6
00:00:19,920 --> 00:00:24,170
然后继续重复 从数组的上部分和下部分选择一个基准

7
00:00:24,170 --> 00:00:29,660
进行类似的排序 直到整个数组都排好序

8
00:00:29,660 --> 00:00:31,100
我们来看个示例

9
00:00:32,180 --> 00:00:34,580
首先我们选择一个基准

10
00:00:34,580 --> 00:00:37,320
惯常做法是选择最后一个元素

11
00:00:37,320 --> 00:00:38,489
所以我们也这么选择

12
00:00:40,360 --> 00:00:43,890
第一个元素大于基准

13
00:00:43,900 --> 00:00:45,850
所以需要将它移到基准的后面

14
00:00:45,850 --> 00:00:48,000
但是 我们进行的是原地排序

15
00:00:48,000 --> 00:00:51,240
所以 我们需要移开基准前方的元素 以便腾出空间

16
00:00:52,410 --> 00:00:55,230
在这一步 我们将 8 移到最后一个方框

17
00:00:55,230 --> 00:00:59,870
2 移到倒数第二个方框 然后将 10 一直移到第一个方框

18
00:01:00,920 --> 00:01:02,566
这么做好像有点违反直觉

19
00:01:02,566 --> 00:01:07,500
你会觉得我们应该将 10 移到后面 而不是前面

20
00:01:07,500 --> 00:01:09,960
暂时先别急 很快我们会看出这么做为何可行

21
00:01:11,620 --> 00:01:15,190
我们已经转移完毕 可以继续对比了

22
00:01:15,190 --> 00:01:17,107
现在我们看看 10

23
00:01:17,107 --> 00:01:21,380
因为 10 比 2 大 我们需要将 10 移到后面

24
00:01:21,380 --> 00:01:24,330
将 2 移到前面 并将 2 前面的内容也移到前面

25
00:01:25,330 --> 00:01:26,649
再交换一次

26
00:01:27,910 --> 00:01:30,679
最后 0 位于数组的最前端

27
00:01:30,680 --> 00:01:33,670
实际上比基准 2 要小

28
00:01:33,670 --> 00:01:36,510
太棒了 现在我们需要转到第二个元素

29
00:01:36,510 --> 00:01:38,760
并执行相同的流程

30
00:01:38,760 --> 00:01:42,380
因为 2 比 3 大 我们需要再次移动所有元素

31
00:01:43,380 --> 00:01:45,259
现在看起来好多了

32
00:01:46,690 --> 00:01:50,270
因为 7 依然比 2 大 我们需要再进行一轮对比

33
00:01:51,610 --> 00:01:52,900
这是我们需要进行的交换流程

34
00:01:54,700 --> 00:01:55,740
现在数组是这个样子的了

35
00:01:56,840 --> 00:01:58,745
看起来很棒

36
00:01:58,745 --> 00:02:00,110
2 处在了正确的位置

37
00:02:00,110 --> 00:02:03,440
我们已经检查了它前面的所有元素 确定它们都比它小

38
00:02:03,440 --> 00:02:06,270
我们将绝对比它大的元素都放在了

39
00:02:06,270 --> 00:02:07,289
它的后面

40
00:02:07,290 --> 00:02:10,699
因为我们确定 2 前面的所有元素都比 2 小

41
00:02:10,699 --> 00:02:14,680
2 后面的元素都比 2 大

42
00:02:14,680 --> 00:02:18,500
我们知道 2 处在了完全正确的位置

43
00:02:18,500 --> 00:02:21,800
我用不同颜色标记下 这样就知道不用再移动它了

44
00:02:21,800 --> 00:02:24,150
此时 通常我们会对所有小于基准的元素

45
00:02:24,150 --> 00:02:28,100
和大于基准的元素执行相同的流程

46
00:02:28,100 --> 00:02:30,690
先从小于基准的部分开始

47
00:02:30,690 --> 00:02:33,940
我们再次选择一个基准 然后将所有前面的元素与它对比

48
00:02:33,940 --> 00:02:37,870
因为 0 比 1 小 我们不用执行任何操作

49
00:02:37,870 --> 00:02:39,360
只需对比一次

50
00:02:39,360 --> 00:02:43,300
我们就知道这两个元素都处在了正确的位置 可以继续了

51
00:02:43,300 --> 00:02:45,910
现在从数组的第二部分选择一个基准

52
00:02:46,950 --> 00:02:51,399
因为 7 和 3 都比基准小 我们不需要移动它们

53
00:02:51,400 --> 00:02:53,390
但是 8 比基准大

54
00:02:53,390 --> 00:02:55,660
我们需要进行一次交换

55
00:02:55,660 --> 00:02:58,487
交换完毕后 可以看出 8 和 10

56
00:02:58,487 --> 00:03:01,970
实际上位于了最终正确位置

57
00:03:01,970 --> 00:03:06,179
所有小于 8 的元素都位于 8 前面 我们根本不需要移动它

58
00:03:06,179 --> 00:03:11,260
现在只剩下两个元素可能需要排序

59
00:03:11,260 --> 00:03:14,980
现在只需要选择 3 作为基准并进行对比

60
00:03:16,130 --> 00:03:18,109
可以看出这两个元素需要交换

61
00:03:18,110 --> 00:03:21,200
快速交换下 整个数组就排好序了

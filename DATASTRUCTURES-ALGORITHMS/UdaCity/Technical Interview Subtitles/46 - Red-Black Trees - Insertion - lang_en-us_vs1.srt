1
00:00:00,360 --> 00:00:03,210
Inserting a new node is
where the magic happens.

2
00:00:03,210 --> 00:00:05,520
There are several different
states of the tree and

3
00:00:05,520 --> 00:00:09,100
the node you're inserting that
require different courses of action.

4
00:00:09,100 --> 00:00:13,390
Remember that your resulting tree needs
to follow both the red-black tree and

5
00:00:13,390 --> 00:00:15,130
BST rules.

6
00:00:15,130 --> 00:00:16,920
There's a lot of information here.

7
00:00:16,920 --> 00:00:21,285
Your first goal should be to watch and
get a sense of how red-black trees work.

8
00:00:21,285 --> 00:00:25,750
You can rewatch the video later
to actually memorize the details.

9
00:00:25,750 --> 00:00:29,860
One overall rule of insertion is that
you should try to insert a node as a red

10
00:00:29,860 --> 00:00:33,490
node, which from here on out
I'll represent as both red and

11
00:00:33,490 --> 00:00:38,580
square to help with differentiation,
and then change its color as needed.

12
00:00:38,580 --> 00:00:43,400
The first situation is when you're
inserting the first node into the tree.

13
00:00:43,400 --> 00:00:46,839
Since it's the root, you can change
the color to black if you're adhering to

14
00:00:46,840 --> 00:00:48,850
the root must be black rule.

15
00:00:48,850 --> 00:00:51,200
Otherwise you'll have nothing to do.

16
00:00:51,200 --> 00:00:54,870
If the new parent node is black,
you don't need to do any work.

17
00:00:54,870 --> 00:00:58,400
Since you're adding a red node,
you haven't upset the balance

18
00:00:58,400 --> 00:01:02,330
of black nodes in any path or
violated any of the other rules.

19
00:01:02,330 --> 00:01:04,190
Now if the parent is red,

20
00:01:04,190 --> 00:01:07,560
there are several cases with
more complicated solutions.

21
00:01:07,560 --> 00:01:08,740
If the parent and

22
00:01:08,740 --> 00:01:12,839
its sibling are both red,
then they should be changed to black.

23
00:01:12,840 --> 00:01:14,990
And their parent, the grandparent,

24
00:01:14,990 --> 00:01:18,429
let's say, of the node you're inserting,
becomes red.

25
00:01:18,430 --> 00:01:21,740
We switch the node colors in this
way to maintain the number of

26
00:01:21,740 --> 00:01:23,700
black nodes in a given path.

27
00:01:24,170 --> 00:01:26,690
Look through all the paths in this tree.

28
00:01:26,690 --> 00:01:30,149
The number of black nodes
in each path is still two.

29
00:01:30,150 --> 00:01:33,600
The biggest problem here is that
we could have violated another

30
00:01:33,600 --> 00:01:35,470
property by changing the grandparent.

31
00:01:35,470 --> 00:01:40,121
We can just treat the grandparent as
a newly inserted node and change it or

32
00:01:40,121 --> 00:01:43,565
its ancestors according to
the same cases and rules.

33
00:01:43,565 --> 00:01:45,250
Here we just treat it like Case 1 and

34
00:01:45,250 --> 00:01:48,290
change it back to black since we
still want the route to be black.

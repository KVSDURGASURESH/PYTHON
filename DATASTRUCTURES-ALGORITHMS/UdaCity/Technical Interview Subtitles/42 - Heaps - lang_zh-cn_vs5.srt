1
00:00:00,530 --> 00:00:05,530
堆是另一种树的类型 但是具有自身的一些规则

2
00:00:05,530 --> 00:00:10,300
堆中的元素会按照升序或降序排列

3
00:00:10,300 --> 00:00:15,260
根元素会是树中的最大值或最小值

4
00:00:15,260 --> 00:00:17,360
堆包括两种不同的类型

5
00:00:17,360 --> 00:00:22,700
最大堆和最小堆 包含了上述两种类型

6
00:00:22,700 --> 00:00:27,100
在最大堆中 父节点的值必须始终比其子节点的值大

7
00:00:27,100 --> 00:00:29,570
所以根是最大的元素

8
00:00:29,570 --> 00:00:34,720
最小堆则是相反的 父节点的值必须比其子节点的值小

9
00:00:34,720 --> 00:00:37,600
所以根是最小的元素

10
00:00:37,600 --> 00:00:42,260
堆不需要是二叉树 所以父节点可以具有任何数量的子节点

11
00:00:42,260 --> 00:00:44,860
对于不同的堆类型

12
00:00:44,860 --> 00:00:48,820
搜索插入和删除等操作会变化很大

13
00:00:48,820 --> 00:00:51,490
下面我主要介绍下最大二叉堆

14
00:00:52,630 --> 00:00:55,500
我们将遵循两个子节点的规则

15
00:00:55,500 --> 00:00:57,309
根将是最大元素

16
00:00:57,310 --> 00:01:00,990
此外 二叉堆必须是完全树

17
00:01:00,990 --> 00:01:04,660
也就是除了最后一层之外 所有其他层级都必须填满了

18
00:01:04,660 --> 00:01:09,570
如果最后一层没有完全填满 值将从左往右填

19
00:01:09,570 --> 00:01:13,500
最右边的叶子将为空 直到整行被填满了

20
00:01:13,500 --> 00:01:16,850
在这个堆中 用于获取最大值的函数

21
00:01:16,850 --> 00:01:20,615
也叫做 Peek 是常量时间

22
00:01:20,615 --> 00:01:23,250
我们看看搜索流程是怎样的

23
00:01:23,250 --> 00:01:26,750
我们是从左侧开始搜索 还是右侧呢？

24
00:01:26,750 --> 00:01:31,720
在 BST 中 我们通过对比 知道每步该往哪个方向移动

25
00:01:31,720 --> 00:01:34,330
但是这里却无法保证往哪个方向

26
00:01:34,330 --> 00:01:38,520
因此 搜索变成线性时间操作

27
00:01:38,520 --> 00:01:42,590
因为通常 我们没有什么技巧 结果需要搜索整个树

28
00:01:42,590 --> 00:01:46,720
但是值得注意的一点是 我们可以利用最大值特性来

29
00:01:46,720 --> 00:01:48,720
协助搜索

30
00:01:48,720 --> 00:01:52,210
例如 如果我们要搜索的值比根大

31
00:01:52,210 --> 00:01:54,800
我们就可以立即停止搜索了

32
00:01:54,800 --> 00:01:55,460
通常

33
00:01:55,460 --> 00:01:59,199
如果我们的节点值比我们要对比的大

34
00:01:59,200 --> 00:02:03,500
我们就不需要查看其子树中的任何元素 因为我们知道它是最大的

35
00:02:03,500 --> 00:02:06,160
最坏情况依然存在 但是在平均情况下

36
00:02:06,160 --> 00:02:09,160
我们不需要搜索每个元素

37
00:02:09,160 --> 00:02:12,490
平均情况更接近 O(n/2)

38
00:02:12,500 --> 00:02:14,220
但是依然近似于线性时间

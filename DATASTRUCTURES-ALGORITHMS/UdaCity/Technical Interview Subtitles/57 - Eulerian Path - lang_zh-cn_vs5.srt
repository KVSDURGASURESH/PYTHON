1
00:00:00,280 --> 00:00:04,490
有一些特别著名的路径和图表类型

2
00:00:04,490 --> 00:00:09,120
这里的路径是指遍历或查找的具体路线

3
00:00:09,120 --> 00:00:13,900
例如 你可以创建一个路径 它会经过图表中的每条边

4
00:00:13,900 --> 00:00:14,340
至少一次

5
00:00:15,500 --> 00:00:18,620
这种路径叫做欧拉路径

6
00:00:18,620 --> 00:00:23,890
没错 它就是根据著名的数学家欧拉命名的

7
00:00:23,890 --> 00:00:27,270
对于基本欧拉路径 你从一个节点开始

8
00:00:27,270 --> 00:00:31,600
然后遍历所有边 最后可能到达不同的节点

9
00:00:32,880 --> 00:00:36,965
对于欧拉回路 你必须遍历所有边且仅遍历一次

10
00:00:36,965 --> 00:00:38,865
最后到达开始时的同一节点

11
00:00:40,550 --> 00:00:45,850
实际上并不是所有图表都具有欧拉路径

12
00:00:45,850 --> 00:00:47,225
在这个图表中 无论从哪个节点开始

13
00:00:47,225 --> 00:00:51,250
最后都陷在某个外向节点上

14
00:00:51,250 --> 00:00:54,745
如果不经过已经查看的边的话 就无法再转到其他节点上

15
00:00:55,795 --> 00:00:57,400
这里有一个小技巧

16
00:00:57,400 --> 00:01:02,400
伟大的欧拉告诉我们 只有所有顶点的深度都相同

17
00:01:02,400 --> 00:01:07,950
或和顶点相连的边数相等时 图表才具有欧拉回路

18
00:01:07,950 --> 00:01:11,560
欧拉路径比较属于线性效率

19
00:01:11,560 --> 00:01:15,650
所以图表中可以有两个节点具有基数深度

20
00:01:15,650 --> 00:01:18,500
只要它们是路径的开始和结束位置就行了

21
00:01:19,440 --> 00:01:23,710
现在了解下寻找欧拉回路的快速算法

22
00:01:23,710 --> 00:01:25,539
可以从任何顶点开始

23
00:01:25,540 --> 00:01:28,210
沿着边行走 直到返回到该顶点

24
00:01:29,280 --> 00:01:33,690
如果你没有遇到所有边 则可以从与已访问节点相连的

25
00:01:33,690 --> 00:01:36,929
未查看边开始

26
00:01:36,930 --> 00:01:40,670
然后通过这些未查看的边创造一个路径

27
00:01:40,670 --> 00:01:43,290
可以继续这一流程 直到查看了

28
00:01:43,290 --> 00:01:44,810
图表中的所有边一次

29
00:01:45,990 --> 00:01:49,149
然后可以将这些路径添加到一起

30
00:01:49,150 --> 00:01:51,320
从相同的节点处相加

31
00:01:52,515 --> 00:01:54,296
该算法非常高效

32
00:01:54,296 --> 00:02:00,170
时间效率是边的条数

33
00:02:00,170 --> 00:02:01,560
因为它访问了所有边一次 这也是我们最希望出现的情况

34
00:02:03,600 --> 00:02:06,530
另一种路径是哈密顿路径

35
00:02:06,530 --> 00:02:09,860
是指必须经过每个顶点一次

36
00:02:09,860 --> 00:02:14,910
类似地 哈密顿回路需要以同一顶点开始和结束

37
00:02:14,910 --> 00:02:18,270
在计算机科学中 判断图表是否具有哈密顿路径是一个著名的问题

38
00:02:18,270 --> 00:02:22,810
叫做哈密顿路径问题

39
00:02:23,880 --> 00:02:26,859
我们没有相关工具来介绍它

40
00:02:26,860 --> 00:02:29,980
但是很快会介绍其他类似的著名问题
